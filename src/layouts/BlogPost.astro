---
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import Header from "../components/Header.astro";

type Props = CollectionEntry<"blog">["data"];

const {
  title,
  description,
  pubDate,
  updatedDate,
  heroImage,
  tags = [],
} = Astro.props;
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} image={heroImage} />
    <style>
      main {
        width: 100%;
        max-width: 100%;
        margin: 0;
        box-sizing: border-box;
      }
      .hero-image {
        width: 100%;
      }
      .hero-image img {
        display: block;
        margin: 0 auto;
        border-radius: 12px;
        box-shadow: var(--box-shadow);
      }
      .prose {
        width: 100%;
        max-width: 820px;
        margin: auto;
        padding: 1em;
        color: rgb(var(--gray-dark));
        box-sizing: border-box;
      }
      .title {
        margin-bottom: 1em;
        padding: 1em 0;
        text-align: center;
        line-height: 1;
        width: 100%;
        max-width: 820px;
        margin-left: auto;
        margin-right: auto;
        box-sizing: border-box;
      }
      .title h1 {
        margin: 0 0 0.5em 0;
        word-wrap: break-word;
        overflow-wrap: break-word;
        hyphens: auto;
      }
      .date {
        margin-bottom: 0.5em;
        color: rgb(var(--gray));
      }
      .last-updated-on {
        font-style: italic;
        font-size: 1rem;
        color: #969696;
      }

      .tags {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
        margin: 1rem 0;
        justify-content: center;
      }

      .tag {
        background: linear-gradient(
          135deg,
          var(--accent) 0%,
          var(--accent-dark) 100%
        );
        color: white;
        padding: 0.45rem 1rem;
        border-radius: 1rem;
        font-size: 0.8rem;
        font-weight: 500;
        text-decoration: none;
        transition: all 0.3s ease;
        border: none;
        cursor: pointer;
      }

      .tag:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(var(--accent), 0.3);
        color: white;
      }

      @media (max-width: 768px) {
        .prose {
          padding: 0.5em;
        }
        .title {
          padding: 0.5em 0;
        }
        .title h1 {
          font-size: 2rem;
          line-height: 1.2;
        }
      }

      @media (max-width: 480px) {
        .prose {
          padding: 0.25em;
        }
        .title h1 {
          font-size: 1.75rem;
        }
        .tags {
          margin: 0.5rem 0;
        }
        .tag {
          font-size: 0.7rem;
          padding: 0.2rem 0.6rem;
        }
      }
    </style>
  </head>

  <body>
    <Header />
    <main>
      <article>
        <div class="hero-image">
          {
            heroImage && (
              <Image width={1020} height={510} src={heroImage} alt="" />
            )
          }
        </div>
        <div class="prose">
          <div class="title">
            <div class="date">
              <FormattedDate date={pubDate} />
            </div>
            <h1>{title}</h1>
            {
              tags && tags.length > 0 && (
                <div class="tags">
                  {tags.map((tag: string) => (
                    <span class="tag">{tag}</span>
                  ))}
                </div>
              )
            }
            <hr />
          </div>

          <slot />
          {
            updatedDate && (
              <div class="last-updated-on">
                Last updated on <FormattedDate date={updatedDate} />
              </div>
            )
          }
        </div>
      </article>
    </main>
    <Footer />
  </body>
</html>
